<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <security:http>


        <security:intercept-url pattern="/css/**" access="permitAll()"/>
        <security:intercept-url pattern="/libs/**" access="permitAll()"/>
        <security:intercept-url pattern="/js/**" access="permitAll()"/>
        <security:intercept-url pattern="/html/**" access="permitAll()"/>
        <security:intercept-url pattern="/layui/**" access="permitAll()"/>
        <security:intercept-url pattern="/layer/**" access="permitAll()"/>
        <security:intercept-url pattern="/index" access="permitAll()" />
        <security:intercept-url pattern="/userLogin" access="permitAll()"/>
        <security:intercept-url pattern="/logout" access="permitAll()"/>
        <security:intercept-url pattern="/imageCode" access="permitAll()"/>
        <security:intercept-url pattern="/error" access="permitAll()"/>


        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>


        <!--自定义Spring Security过滤器-->
        <security:custom-filter ref="imageCodeAuthenticationFilter"
                                before="FORM_LOGIN_FILTER"/>


        <security:form-login login-page="/userLogin"
                                                    authentication-success-handler-ref="myAuthenticationSuccessHandler"
                                                    authentication-failure-handler-ref="myAuthenticationFailureHandler"
                                                    />

        <!--错误处理-->
        <security:access-denied-handler  ref="myAccessDeniedHandler"/>

        <security:csrf disabled="true" />

        <security:headers disabled="true" />

        <!--加上rememberMe功能-->
        <!--token-validaty-seconds:有效秒数-->
        <security:remember-me token-repository-ref="jdbcTokenRepository"
                              token-validity-seconds="3600" user-service-ref="myUserDetailService"/>

        <security:logout logout-url="/logout" delete-cookies="JSESSIONID"
                         invalidate-session="true"
                         success-handler-ref="myLogoutSuccessHandler"/>




    </security:http>

    <security:authentication-manager >

        <security:authentication-provider user-service-ref="myUserDetailService" >
            <!--<security:user-service>
                <security:user name="aaa" password="123" authorities="ROLE_USER"/>
            </security:user-service>-->
            <!--使用加密算法对用户输入的密码进行加密，然后和数据库的密码进行配对-->
            <security:password-encoder ref="passwordEncoder"/>

        </security:authentication-provider>


    </security:authentication-manager>


    <bean id="myUserDetailService" class="com.jfs.security.MyUserDetailService"/>
    <bean id="myAuthenticationSuccessHandler" class="com.jfs.security.MyAuthenticationSuccessHandler"/>
    <bean id="myAuthenticationFailureHandler" class="com.jfs.security.MyAuthenticationFailureHandler"/>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="myLogoutSuccessHandler" class="com.jfs.security.MyLogoutSuccessHandler"/>

    <bean id="myAccessDeniedHandler" class="com.jfs.security.MyAccessDeniedHandler"/>

    <bean id="imageCodeAuthenticationFilter" class="com.jfs.filter.ImageCodeAuthenticationFilter">
        <property name="authenticationFailureHandler" ref="myAuthenticationFailureHandler"/>
    </bean>
    <bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="createTableOnStartup" value="true"/>-->
    </bean>

</beans>